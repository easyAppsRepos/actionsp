{"version":3,"sources":["../../src/pages/escaner/escaner.module.ts","../../src/pages/escaner/escaner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AAUxC;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAR7B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;aACtC;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;ACZY;AACe;AACH;AACtD;;;;;GAKG;AAOH;IAME,qBAAmB,OAAsB,EAAS,SAAoB,EAAS,WAAwB;QAApF,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAa;IACvG,CAAC;IAED,oCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IAGD,oCAAc,GAAd;QAEE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;aAC9B,IAAI,CAAC,cAAI;YACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,mCAAmC;QACpC,CAAC,CAAC,CAAC;QAGT;;;;;;;;;;;;;;;;;;;;;;;;;;UA0BE;IAEA,CAAC;IAnDU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;oBAOuG;OAN5F,WAAW,CAyDvB;IAAD,eAAC;;AAAA;SAzDY,WAAW,e","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EscanerPage } from './escaner';\n\n@NgModule({\n  declarations: [\n    EscanerPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(EscanerPage),\n  ],\n})\nexport class EscanerPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/escaner/escaner.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { ApiProvider } from '../../providers/api/api';\n/**\n * Generated class for the EscanerPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-escaner',\n  templateUrl: 'escaner.html',\n})\nexport class EscanerPage {\n\n\n\n\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public apiProvider: ApiProvider) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad EscanerPage');\n  }\n\n\n  escanearCodigo() {\n\n    this.apiProvider.getYoutubeLink()\n      .then(data => {\n       console.log(data);\n       //this.dataEquipamento = data.data;\n      });\n \n\n/*\n    console.log('escanearCodigo');\n\n       cordova.plugins.barcodeScanner.scan(\n      function (result) {\n      console.log(result);\n      var ref = cordova.InAppBrowser.open(result.text, '_system', 'location=yes');\n      },\n      function (error) {\n          alert(\"Scanning failed: \" + error);\n      },\n      {\n\n          preferFrontCamera : true, // iOS and Android\n          showFlipCameraButton : true, // iOS and Android\n          showTorchButton : true, // iOS and Android\n          torchOn: true, // Android, launch with the torch switched on (if available)\n          saveHistory: true, // Android, save scan history (default false)\n          prompt : \"Place a barcode inside the scan area\", // Android\n          resultDisplayDuration: 500, // Android, display scanned text for X ms. 0 suppresses it entirely, default 1500\n          formats : \"QR_CODE,PDF_417\", // default: all but PDF_417 and RSS_EXPANDED\n          orientation : \"landscape\", // Android only (portrait|landscape), default unset\n          disableAnimations : true, // iOS\n          disableSuccessBeep: false // iOS and Android\n      }\n   );\n*/\n\n  }\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/escaner/escaner.ts"],"sourceRoot":""}